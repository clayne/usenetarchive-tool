.TH UAT 1 2016-11-24 UAT "Usenet Archive Toolkit"
.SH NAME
uat \- usenet archive toolkit
.SH SYNOPSIS
.I uat
<command>
[<args>]
.SH DESCRIPTION
Usenet Archive Toolkit project aims to provide a set of tools to process
various sources of usenet messages into a coherent, searchable archive.
.SS Motivation
Usenet is dead. You may believe it's not, but it really is. People went away
to various forums, facebooks and twitters and seem fine there. Meanwhile,
the old discussions slowly rot away. Google groups is a sad, unusable joke.
Archive.org dataset is vastly incomplete. There is no easy way to get the
data, browse it, or search it. So, maybe something needs to be done. How
hard can it be anyway?  (Not very: one month for a working prototype,
another one for polish and bugfixing.)
.SS Advantages
Why use UAT? Why not use existing solutions, like google groups, archives
from archive.org or NNTP servers with long history?
.IP \[bu] 2
UAT is designed for offline work. You don't need network connection to
access data in "the cloud". You don't need to wait for a reply to your
query, or, god forbid, endure "web 2.0" interfaces.
.IP \[bu]
UAT archives won't suddenly disappear. You have them on your disk. Google
groups are deteriorating with each new iteration of the interface. Also,
google is known for shutting down services they no longer feel viable.
Google reader, google code search, google code, etc. Other, smaller services
are one disk crash away from completely disappearing from the network.
.IP \[bu]
UAT archive format is designed for fast access and efficient search. Each
message is individually compressed, to facilitate instant access, but uses
whole-archive dictionary for better compression. Search is achieved through
a database similar in design to google's original paper. Total archive size
is smaller than uncompressed collection of messages.
.IP \[bu]
Multiple message sources may be merged into a single UAT archive, without
message duplication. This way you can fill blanks in source A (for example
NNTP archive server) with messages from source B (for example much smaller
archive.org dump). Archives created in such way are the most complete
collection of messages available.
.IP \[bu]
UAT archives do not contain duplicate messages (which is common even on NNTP
servers), nor stray messages from other groups (archive.org collections
contain many bogus messages).
.IP \[bu]
Other usenet archives are littered with spam messages. UAT can filter out
spam, making previously unreadable newsgroups a breeze to read. Properly
trained spam database has very low false positive and false negative
percentage.
.IP \[bu]
All messages are transcoded to UTF-8, so that dumb clients may be used for
display. UAT tries very hard to properly decode broken and/or completely
invalid headers, messages without specified encoding or with bad encoding.
HTML parts of message are removed. You also don't need to worry about
parsing quoted-printable content (most likely malformed). And don't forget
about search. Have fun grepping that base64 encoded message without UAT.
.IP \[bu]
UAT archives contain precalculated message connectivity graph, which removes
the need to parse "references" headers (often broken), sort messages by
date, etc. UAT can also "restore" missing connectivity that is not indicated
in message headers, through search for quoted text in other messages.
.IP \[bu]
Access to archives is available through a trivial libuat interface.
.IP \[bu]
UAT archives are mapped to memory and 100% disk backed. In high memory
pressure situations archive pages may just be purged away and later reloaded
on demand. No memory allocations are required during normal libuat
operation, other than:
.RS
.IP \[bu] 2
Small, static growing buffer used to decompress single message into.
.IP \[bu]
std::vectors used during search operation.
.RE
.IP \[bu]
Merits of such approach can be seen in tbrowser, which requires only 9
bytes per message for bookkeeping. Total memory required to display a group
with 2.5 million messages is only 22.5 MB.
.SH NOTES
While UAT will compile on a 32-bit machine, it will not work reliably due
to memory address space requirements. You should only use 64-bit version.
.SH AUTHOR
Bartosz Taudul <wolf.pld@gmail.com>
.SH COPYRIGHT
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.
.SH "SEE ALSO"
.ad l
.nh
.BR \%uat-Browser (1),
.BR \%uat-connectivity (1),
.BR \%uat-export-messages (1),
.BR \%uat-extract-msgid (1),
.BR \%uat-extract-msgmeta (1),
.BR \%uat-filter-newsgroups (1),
.BR \%uat-filter-spam (1),
.BR \%uat-google-groups (1),
.BR \%uat-import-source-maildir (1),
.BR \%uat-import-source-maildir-7z (1),
.BR \%uat-import-source-mbox (1),
.BR \%uat-kill-duplicates (1),
.BR \%uat-lexhash (1),
.BR \%uat-lexicon (1),
.BR \%uat-lexopt (1),
.BR \%uat-lexsort (1),
.BR \%uat-lexstats (1),
.BR \%uat-libuat (1),
.BR \%uat-merge-raw (1),
.BR \%uat-package (1),
.BR \%uat-query (1),
.BR \%uat-query-raw (1),
.BR \%uat-relative-complement (1),
.BR \%uat-repack-lz4 (1),
.BR \%uat-repack-zstd (1),
.BR \%uat-sort (1),
.BR \%uat-tbrowser (1),
.BR \%uat-threadify (1),
.BR \%uat-utf8ize (1),
.BR \%uat-verify (1)
.SH "HOME PAGE"
https://bitbucket.org/wolfpld/usenetarchive
